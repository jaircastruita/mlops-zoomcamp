{"timestamp":"2025-07-23T18:55:42.701712","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-23T18:55:42.702382","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/simple_test_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-23T18:55:42.775541","level":"info","event":"Tmp dir root location: /tmp","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-23T18:55:42.776345","level":"info","event":"Running command: ['/usr/bin/bash', '-c', 'echo Hello World']","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-23T18:55:42.790405","level":"info","event":"Output:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-23T18:55:42.792365","level":"info","event":"Hello World","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-23T18:55:42.792671","level":"info","event":"Command exited with return code 0","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-23T18:55:42.793193","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019838a4-3058-70e0-b36a-70e259f474f1'), task_id='print_hello', dag_id='my_example_dag', run_id='manual__2025-07-23T18:55:41.124106+00:00', try_number=1, map_index=-1, hostname='aad36c6069ba', context_carrier={}, task=<Task(BashOperator): print_hello>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 23, 18, 55, 42, 388040, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/my_example_dag/runs/manual__2025-07-23T18%3A55%3A41.124106%2B00%3A00/tasks/print_hello?try_number=1')","logger":"task"}
